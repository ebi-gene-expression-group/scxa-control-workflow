params {
    
    scanpy {
        filter_cells {
            min_counts = 1000
            min_genes = 4500
            max_counts = 'Inf'
            max_genes = 'Inf' 
        }
        filter_genes {
            min_cells = 5
            min_counts = '-Inf'
            max_cells = 'Inf'
            max_counts = 'Inf'
        }
        normalise_data{
            scale_factor = 10000
        }
        find_variable_genes {
            flavor = 'seurat'
            min_mean = 0.0125
            max_mean = 3
            min_disp = 0.5
            max_disp = 'Inf'
            n_bins = 20
            n_top_genes = 'None'
        }
        scale_data {
            do_log = 'true'
            vars_to_regress = 'n_counts'
            zero_centre = 'true'
            scale_max = 'none' 
        }
        pca {
            n_pcs = 9
            zero_centre = 'true'
            svd_solver = 'auto' 
            random_seed = 1234
            chunked = 'false'  
            chunk_size = 'none'
            color_by = 'none'
            use_raw = 'false'
            edges = 'false'
            arrows = 'false'
            sort_order = 'true'
            groups = 'none'
            projection = '2d' 
            components = '1,2' 
            palette = 'None'
            frame = 'true'
        }
        neighbours {
            n_neighbours = 15
            n_pcs = 9  
            use_rep = 'none'
            knn = 'false'
            random_seed = 1234
            method = 'umap'
            metric = 'euclidean'
        }
        find_clusters {
            flavor = 'vtraag'
            restrict_to = 'none'
            key_added = 'louvain'
            use_weights = 'false' 
            random_seed = 1234 
            resolutions = [ '0.1', '0.3', '0.5', '0.7', '1.0', '2.0', '3.0', '4.0', '5.0' ]
        }
        run_umap {
            min_dist = 0.5
            spread = 1
            n_components = 2
            maxiter = 'none'
            alpha = 1
            gamma = 1
            negative_sample_rate = 5
            init_pos = 'spectral'
            random_seed = 1234
            a = 'none'
            b = 'none'
            use_raw = 'false'
            color_by = 'none'
            edges = 'false'
            arrows = 'false'
            groups = 'none'
            projection = '2d'
        }
        run_tsne {
            n_components = 2
            use_rep = 'none'
            perplexities = [ 1, 5, 10, 15, 20, 25, 30, 35, 40, 45, 50 ]
            early_exaggeration = 12
            learning_rate = 1000
            components = '1,2' 
            palette = 'None'
            frame = 'true'
            random_seed = 1234
            projection = '2d'
        }
        find_markers{
            groupby = 'louvain'
            groups = 'none'
            reference = 'rest'
            n_genes = 100
            method = 't-test_overestim_var'
            rankby_abs = 'false'
            use_raw = 'true'
            show_n_genes = 10
            key = 'none'
        }
    }
}
